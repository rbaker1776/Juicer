cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./evaluation.h:0:0
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1427:28: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    streamsize __np = __op - __ob;
                           ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./uci.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./uci.h:0:0
cli.cpp:18:5: note: could not determine the original source location for ./engine.h:0:0
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: note: could not determine the original source location for ./engine.h:0:0
In file included from cli.cpp:4:
In file included from ./engine.h:8:
./uci.h:30:16: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        Square to = m.to;
                      ^
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (s == NO_SQUARE) { return "-"; }
              ^
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:43:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ios:222:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/shared_ptr.h:27:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/compressed_pair.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__fwd/get.h:12:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/copyable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/movable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/swappable.h:24:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/swap.h:42:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
  _Tp __t(_VSTD::move(__x));
          ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:342:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__split_buffer:376:15: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    if (__cap == 0) {
              ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:604:53: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        {return static_cast<size_type>(this->__end_ - this->__begin_);}
                                                    ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:1676:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (this->__end_ < this->__end_cap())
              ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
./engine.h:40:27: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        const bool leaf = (depth == 2);
                                 ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:1493:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
            __is.__setstate_nothrow(__state);
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:191:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:198:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:1493:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
            __is.__setstate_nothrow(__state);
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:191:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:198:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:6:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:665:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
            while (__sz > INT_MAX) {
            ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:665:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/sstream:665:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:199:5: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    { this->init(__sb); }
    ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:1546:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
            __is.__setstate_nothrow(__state);
            ^
cli.cpp:18:5: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
int main(int argc, char* argv[])
    ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:191:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:43:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ios:222:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__locale:21:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/mutex:192:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__condition_variable/condition_variable.h:17:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mutex/unique_lock.h:17:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__system_error/system_error.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__system_error/error_category.h:15:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/string:2319:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__delta_cap > __ms - __old_cap - 1)
                                       ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/string:1182:17: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        return (__is_long() ? __get_long_cap() : static_cast<size_type>(__min_cap)) - 1;
                ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/string:1182:17: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:1493:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
            __is.__setstate_nothrow(__state);
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:191:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:1451:1: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
operator>>(basic_istream<_CharT, _Traits>& __is,
^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:212:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/streambuf:198:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (__ninp_ == __einp_)
            ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:43:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ios:222:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/shared_ptr.h:27:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/compressed_pair.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__fwd/get.h:12:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/copyable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/movable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/swappable.h:24:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/swap.h:42:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
  _Tp __t(_VSTD::move(__x));
          ^
In file included from cli.cpp:4:
./engine.h:81:21: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline void Engine::make_move(const Move& m)
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:342:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__split_buffer:376:15: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    if (__cap == 0) {
              ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:604:53: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        {return static_cast<size_type>(this->__end_ - this->__begin_);}
                                                    ^
In file included from cli.cpp:4:
./engine.h:81:21: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline void Engine::make_move(const Move& m)
                    ^
./engine.h:81:21: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:1676:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (this->__end_ < this->__end_cap())
              ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:43:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ios:222:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__locale:21:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/mutex:192:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__condition_variable/condition_variable.h:17:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__mutex/unique_lock.h:17:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__system_error/system_error.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__system_error/error_category.h:15:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/string:3905:13: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
        if (*__lp != *__rp)
            ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/string:1168:17: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        {return __is_long() ? __get_long_size() : __get_short_size();}
                ^
In file included from cli.cpp:4:
In file included from ./engine.h:8:
./uci.h:41:18: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline Move UCI::string_to_move(const Position& pos, const std::string& str)
                 ^
./uci.h:41:18: note: could not determine the original source location for ./uci.h:0:0
./uci.h:41:18: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline Move UCI::string_to_move(const Position& pos, const std::string& str)
                 ^
./uci.h:41:18: note: could not determine the original source location for ./uci.h:0:0
./uci.h:30:16: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        Square to = m.to;
                      ^
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        if (s == NO_SQUARE) { return "-"; }
              ^
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./uci.h:20:8: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1427:28: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    streamsize __np = __op - __ob;
                           ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1427:28: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    streamsize __np = __op - __ob;
                           ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb >> 8;
                          ^
./movement.h:3587:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3601:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) >> 7;
                                               ^
./movement.h:3603:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 9;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:339:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return bq;
                                                   ^
./position.h:336:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return bn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:94:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                step_pawns &= pawn_step_bb<Them>(gendata.rook_pins) | ~gendata.rook_pins;
                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:122:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if ((w_atk_pawns | e_atk_pawns | step_pawns) & Bitboard::rank_7<Us>())
                                 ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:92:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_atk_pawns &= pawn_atk_east_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:93:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                e_atk_pawns &= pawn_atk_west_bb<Them>(gendata.bishop_pins) | ~gendata.bishop_pins;
                            ^
./movegen.h:88:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                uint64_t step_pawns = vertical_pawns & pawn_step_bb<Them>(~pos.pieces);
                                                     ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return bb << 8;
                          ^
./movement.h:3585:13: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movement.h:3597:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 9;
                                               ^
./movement.h:3599:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) << 7;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                return attacks[(occupied & mask) * magic >> shift]; 
                       ^
./movement.h:121:10: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:342:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:317:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (to)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:101:43: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                uint64_t ep_atk_west = diagonal_pawns & shift<E>(checkmask & gendata.ep_target);
                                                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:9:
./movement.h:3593:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEH) << 1;
                                               ^
./movement.h:3595:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                return (bb & ~Bitboard::FILEA) >> 1;
                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:137:29: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (occupied & B_EMPTY_OO || seen & B_UNSEEN_OO) 
                                          ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./movegen.h:505:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (rook_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:47:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        uint64_t bishop_pins = 0;
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:491:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        while (bishop_pin)
                               ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
./movegen.h:28:11: note: could not determine the original source location for ./movegen.h:0:0
./movegen.h:28:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        explicit MoveList(const Position& restrict pos): last(enumerate<Gt>(pos, moves)) {}
                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:328:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == QUEEN)  return wq;
                                                   ^
./position.h:325:38: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
                if constexpr (Pt == KNIGHT) return wn;
                                                   ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
./movegen.h:484:7: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                if (PIECE_ATTACKS[BISHOP][ksq] & pos.bitboards<Them, BISHOP, QUEEN>())
                    ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:362:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                 | (bool(castling & Castling::W_OO)  << 2)
                                                     ^
./position.h:361:40: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                 | (bool(castling & Castling::W_OOO) << 3)
                                                     ^
./position.h:361:4: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                 | (bool(castling & Castling::W_OOO) << 3)
                 ^
./position.h:360:32: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                 | ((ep_target != NO_SQUARE) << 4)
                                             ^
./position.h:360:18: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                 | ((ep_target != NO_SQUARE) << 4)
                               ^
./position.h:360:18: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:360:18: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:43:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ios:222:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__locale:15:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/shared_ptr.h:27:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__memory/compressed_pair.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__fwd/get.h:12:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/copyable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/movable.h:14:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__concepts/swappable.h:24:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/swap.h:42:11: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
  _Tp __t(_VSTD::move(__x));
          ^
In file included from cli.cpp:4:
./engine.h:37:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline uint64_t Engine::perft(int depth)
                        ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:342:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/__split_buffer:376:15: remark: Cannot SLP vectorize list: vectorization was impossible with available vectorization factors [-Rpass-missed=slp-vectorizer]
    if (__cap == 0) {
              ^
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:604:53: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        {return static_cast<size_type>(this->__end_ - this->__begin_);}
                                                    ^
In file included from cli.cpp:4:
./engine.h:37:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
inline uint64_t Engine::perft(int depth)
                        ^
./engine.h:37:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 9 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:71:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 5 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:20: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:70:15: remark: Vectorizing horizontal reduction is possible but not beneficial with cost 3 and threshold 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:165:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:166:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                             ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:167:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:168:58: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                     ^
./position.h:203:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:203:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp ^ sqs, wn, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:203:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:204:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:204:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn ^ sqs, wb, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:204:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:205:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:205:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn, wb ^ sqs, wr, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:205:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:35: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                                ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:206:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:206:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn, wb, wr ^ sqs, wq, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & ~sqs, NO_SQUARE, 0);
                                                                                                               ^
./position.h:206:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:207:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:207:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn, wb, wr, wq ^ sqs, wk, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:207:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:216:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:208:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:208:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp & rem, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                               ^
./position.h:208:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:217:106: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                                              ^
./position.h:71:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                           ^
./position.h:246:76: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                ^
./position.h:233:82: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp, wn, wb, wr, wq, wk ^ sqs, bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                                                                      ^
./position.h:262:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:262:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:262:121: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                             ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:279:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp ^ from, wn, wb, wr, wq ^ to, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:263:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:263:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:263:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp ^ from, wn ^ to, wb, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:264:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:264:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:264:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                 ^
./position.h:71:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:281:88: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp ^ from, wn, wb, wr ^ to, wq, wk, bp, bn, bb, br, bq, bk, BLACK, castling, NO_SQUARE, 0);
                                                                                                            ^
./position.h:265:111: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                                   ^
./position.h:265:101: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                                         ^
./position.h:265:91: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp ^ from, wn, wb ^ to, wr, wq, wk, bp, bn & rem, bb & rem, br & rem, bq & rem, bk, BLACK, castling & rem, NO_SQUARE, 0);
                                                                                                               ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:71:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                                      ^
./position.h:71:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                b_pieces(bp | bn | bb | br | bq | bk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:187:56: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                return Position(wp & ~square_to_bb(ep_target), wn, wb, wr, wq, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling, NO_SQUARE, 0);
                                                                                   ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:165:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C1: return Position(wp, wn, wb, wr ^ (A1 | D1), wq, wk ^ (E1 | C1), bp, bn, bb, br, bq, bk, BLACK, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:166:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G1: return Position(wp, wn, wb, wr ^ (H1 | F1), wq, wk ^ (E1 | G1), bp, bn, bb, br, bq, bk, WHITE, castling & Castling::B_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:167:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case C8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (A8 | D8), bq, bk ^ (E8 | C8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:168:34: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                                case G8: return Position(wp, wn, wb, wr, wq, wk, bp, bn, bb, br ^ (H8 | F8), bq, bk ^ (E8 | G8), WHITE, castling & Castling::W_CASTLES, NO_SQUARE, 0);
                                                             ^
./position.h:212:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:212:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == PAWN)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ sqs, bn, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:212:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:213:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:213:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn ^ sqs, bb, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:213:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:214:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:214:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb ^ sqs, br, bq, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:214:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:215:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                                     ^
./position.h:215:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                           ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br ^ sqs, bq, bk, WHITE, castling & ~sqs, NO_SQUARE, 0);
                                                                                 ^
./position.h:215:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:216:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                                     ^
./position.h:216:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                           ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq ^ sqs, bk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                 ^
./position.h:216:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
./position.h:70:30: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                           ^
./position.h:217:81: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                                     ^
./position.h:217:71: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                           ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KING)   return Position(wp & rem, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp, bn, bb, br, bq, bk ^ sqs, WHITE, castling & rem & Castling::W_CASTLES, NO_SQUARE, 0);
                                                                                 ^
./position.h:217:61: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:269:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:269:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == QUEEN)  return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br, bq ^ to, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:270:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:270:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:270:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == KNIGHT) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn ^ to, bb, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:25: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                      ^
./position.h:271:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:271:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:271:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == ROOK)   return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb, br ^ to, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
In file included from ./position.h:8:
In file included from ./fen.h:6:
./bitboard.h:19:72: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
static constexpr uint64_t operator^(uint64_t bb, Square s) { return bb ^ square_to_bb(s); }
                                                                       ^
In file included from cli.cpp:4:
In file included from ./engine.h:7:
In file included from ./movegen.h:6:
./position.h:70:20: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                                 ^
./position.h:272:75: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                               ^
./position.h:272:65: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                                     ^
./position.h:272:55: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                        if constexpr (Pt == BISHOP) return Position(wp, wn & rem, wb & rem, wr & rem, wq & rem, wk, bp ^ from, bn, bb ^ to, br, bq, wk, WHITE, castling & rem, NO_SQUARE, 0);
                                                                           ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
                w_pieces(wp | wn | wb | wr | wq | wk),
                            ^
./position.h:70:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
In file included from ./engine.h:4:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/vector:1676:15: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (this->__end_ < this->__end_cap())
              ^
In file included from cli.cpp:1:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/iostream:44:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/istream:170:
In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/ostream:180:
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
    if (__np > 0)
             ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/locale:1428:14: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
In file included from cli.cpp:4:
./engine.h:40:27: remark: List vectorization was possible but not beneficial with cost 0 >= 0 [-Rpass-missed=slp-vectorizer]
        const bool leaf = (depth == 2);
                                 ^
